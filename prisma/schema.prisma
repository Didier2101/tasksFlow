// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Projects {
  id          Int      @id @default(autoincrement())
  name        String
  description String
  status      Status
  startDate   DateTime
  endDate     DateTime
  tasks       Tasks[]
  createdAt   DateTime @default(now())
}

model Tasks {
  id            Int          @id @default(autoincrement())
  title         String
  description   String
  status        StatusTasks
  projectId     Int
  colaboratorId Int
  colaborators  Colaborators @relation(fields: [colaboratorId], references: [id])
  projects      Projects     @relation(fields: [projectId], references: [id])
  createdAt     DateTime     @default(now())
  completedAt   DateTime?
}

model Colaborators {
  id        Int      @id @default(autoincrement())
  name      String
  email     String   @unique
  jobRole   String
  status    Status
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  tasks     Tasks[]
  users     Users[]
}

model Users {
  id            Int          @id @default(autoincrement())
  password      String
  colaboratorId Int
  role          Role
  colaborator   Colaborators @relation(fields: [colaboratorId], references: [id])
  income        Income[]
  createdAt     DateTime     @default(now())
  updatedAt     DateTime     @updatedAt
}

model Income {
  id        Int       @id @default(autoincrement())
  entryDate DateTime  @default(now())
  exitDate  DateTime? @default(now())
  usersId   Int
  users     Users     @relation(fields: [usersId], references: [id])
}

enum Status {
  ACTIVE
  INACTIVE
}

enum StatusTasks {
  COMPLETED
  INPROGRESS
  TODO
}

enum Role {
  ADMIN
  USER
}
